#!/usr/bin/env ruby

if RUBY_VERSION < '2.0.0'
  abort 'error: POEditor requires Ruby 2 or higher.'
end

if $0 == __FILE__
  $:.unshift File.expand_path('../lib', File.dirname(__FILE__))
end

require 'optparse'
require 'poeditor'

options = {
    :api_token => 'fc1881292605d21bc5531c6ffcf3e410',
    :project_id => nil,
    :lang => nil,
    :localizable_strings => nil,
    :strings_xml => nil
}

OptionParser.new do |opts|
  opts.banner = 'Usage: poeditor [options]'
  opts.on('-t API_TOKEN', '--token API_TOKEN', %q(Specify your POEditor API token)) do |api_token|
    options[:api_token] = api_token
  end
  opts.on('-p PROJECT_ID', '--project PROJECT_ID', %q(Specify your POEditor project identifier)) do |project_id|
    options[:project_id] = project_id
  end
  opts.on('-l LANGUAGE', '--lang LANGUAGE', %q(Specify your POEditor project language)) do |lang|
    options[:lang] = lang
  end
  opts.on('-i PATH', '--ios PATH', %q(Specify iOS Localizable.strings file path)) do |path|
    options[:localizable_strings] = path
  end
  opts.on('-a PATH', '--android PATH', %q(Specify Android strings.xml file path)) do |path|
    options[:strings_xml] = path
  end
  opts.on_tail('-h', '--help', %q(Show this message)) { puts opts; exit 1 }
  opts.on_tail('-v', '--version', 'Show version') { puts POEditor::VERSION; exit }
  opts.parse!
end

# Main
POEditor.exit_with_error('You need to specify your POEditor project identifier using --project option (see --help for more info)') if options[:project_id].nil?
exporter = POEditor::Exporter.new(options[:api_token], options[:project_id])
POEditor.exit_with_error('You need to specify your POEditor project language using --lang option (see --help for more info)') if options[:lang].nil?
unless options[:localizable_strings].nil?
  Log::title('== iOS ==')
  langs = {options[:lang] => options[:localizable_strings]}
  exporter.run(POEditor::AppleFormatter::format, langs) { |s| POEditor::AppleFormatter::process_content(s) }
end
unless options[:strings_xml].nil?
  Log::title('== Android ==')
  langs = {options[:lang] => options[:strings_xml]}
  exporter.run(POEditor::AndroidFormatter::format, langs) { |s| POEditor::AndroidFormatter::process_content(s) }
end
